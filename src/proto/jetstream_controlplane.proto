package edu.princeton.jetstream;

import "jetstream_types.proto";


/**
* An AlterTopo specifies a set of mutations to the operator graph.
* It includes tasks and tables to start, tasks and tables to stop, 
* and edges to add. 
*/
message AlterTopo {
  repeated TaskMeta toStart = 1;
  repeated TableMeta toCreate = 2;
  repeated TaskID taskToStop = 3; 
  repeated string tableToStop = 4; 
  repeated Edge edges = 5;
}


/* An RPC request to a JetStream coordinator server.
* The type field specifies the type of request. The optional fields specify the
* parameters for that particular request type.
*
* TODO: should probably have IDs for requests so we can have multiple concurrent
* request/responses from a single client
*/
message ServerRequest {
  enum Type {GET_NODES = 1; DEPLOY = 3 ; COUNT_NODES = 4;}
  required Type type = 1;

  optional AlterTopo alter = 3;
}


/* An RPC response from a JetStream coordinator server.
* Currently the only messages with responses are "get nodes" and "get 1 node".
* There is also an optional error message field.
*
* TODO: should probably have IDs for requests so we can have multiple concurrent
* request/responses from a single client
*/
message ServerResponse {
  optional string error = 147; //use unusual number to catch errors on parsing
  repeated NodeID nodes = 148; //in response to a get_nodes or get_node command

  optional int32 count_nodes = 149;
}